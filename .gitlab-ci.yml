image: node:10.16.0-alpine

stages:
  - install_dependencies
  - deploy_draft
  - test
  - build
  - deploy

cache:
  paths:
    - node_modules/

install_dependencies:
  stage: install_dependencies
  script:
    - yarn install
  artifacts:
    paths:
      - node_modules/
  tags:
    - build

# build:
#   stage: build
#   script:
#     - yarn build
#   artifacts:
#     paths:
#       - build
#   tags:
#     - build
#   dependencies:
#     - install_dependencies
#   only:
#     - dev
#     - s5/master
#     - s6/master

test:
  stage: test
  script: yarn test
  tags:
    - test

# deploy_preview:
#   stage: deploy_draft
#   script:
#     - install_netlify_cli
#     - install_jq
#     - install_curl
#     - netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --json | tee deploy_draft.json
#     - set_env_url
#   artifacts:
#     paths:
#       - deploy_draft.json
#   dependencies:
#     - build
#   environment:
#     name: $CI_COMMIT_REF_NAME/$CI_COMMIT_SHORT_SHA
#   tags:
#     - build
#   except:
#     - dev
#     - master

deploy_dev:
  stage: deploy
  variables:
    DISTRIBUTION_ID: "E3RZZZSN5R94AD"
    REACT_APP_API_URL: "https://api.analyst.dev.aidgenomics.com"
    REACT_APP_AXIOS_MOCK_ENABLED: "false"
    REACT_APP_MVP_CONFIG: "true"
    S3_BUCKET: "analyst-website-dev"
  before_script:
    - apk add --no-cache curl jq python py-pip git
    - pip install awscli
  script:
    - echo "Building app..."
    - yarn build
    - echo "Uploading to s3 bucket..."
    - aws s3 sync --acl public-read --delete build/ s3://$S3_BUCKET
    - echo "Invalidating CloudFront..."
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'
  environment:
    name: dev
    url: https://analyst.dev.aidgenomics.com
  dependencies:
    - install_dependencies
  tags:
    - build
    - deploy
  only:
    - dev
    - s5/master
    - s6/master

deploy_staging:
  stage: deploy
  variables:
    DISTRIBUTION_ID: "E2IIZ8X6KQ3MJ3"
    REACT_APP_API_URL: "https://api.analyst.staging.aidgenomics.com"
    REACT_APP_AXIOS_MOCK_ENABLED: "false"
    REACT_APP_MVP_CONFIG: "true"
    S3_BUCKET: "analyst-website-staging"
  before_script:
    - apk add --no-cache curl jq python py-pip git
    - pip install awscli
  script:
    - echo "Building app..."
    - yarn build
    - echo "Uploading to s3 bucket..."
    - aws s3 sync --acl public-read --delete build/ s3://$S3_BUCKET
    - echo "Invalidating CloudFront..."
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'
  environment:
    name: staging
    url: https://analyst.staging.aidgenomics.com
  dependencies:
    - install_dependencies
  tags:
    - build
    - deploy
  only:
    - staging

.helper_functions: &helper_functions |
  function install_jq() {
    apk add jq
  }

  function install_curl() {
    apk add curl
  }

  function install_netlify_cli() {
    yarn global add netlify-cli
  }

  function set_env_url() {
    export GITLAB_URL='https://gitlab.com'
    export ENVIRONMENT_REQ_HEADER="PRIVATE-TOKEN:"" "$GL_PRIVATE_TOKEN
    export GET_ENVS_URL=$GITLAB_URL"/api/v4/projects/$CI_PROJECT_ID/environments"
    export ENV_NAME="$CI_COMMIT_REF_NAME/$CI_COMMIT_SHORT_SHA"
    export ENV_ID=$(curl -sSL --header "$ENVIRONMENT_REQ_HEADER" "$GET_ENVS_URL" | jq '.[] | select(.name==env.ENV_NAME) | .id')
    export ENVURL=$(cat deploy.json | jq --raw-output '.deploy_url')
    export ENV_SET_URL=$GITLAB_URL"/api/v4/projects/$CI_PROJECT_ID/environments/$ENV_ID"
    curl --request PUT --data "external_url=$ENVURL" --header "$ENVIRONMENT_REQ_HEADER" "$ENV_SET_URL"
  }

before_script:
  - *helper_functions
